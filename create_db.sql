DROP SCHEMA IF EXISTS ubd_20211 CASCADE;

CREATE SCHEMA ubd_20211 AUTHORIZATION postgres;

GRANT ALL ON SCHEMA ubd_20211 TO postgres;

SET search_path TO ubd_20211;

BEGIN WORK;

SET TRANSACTION READ WRITE;

SET datestyle = DMY;

CREATE TABLE MUSICIAN (
	id_musician SMALLINT,
	name VARCHAR(255) NOT NULL,
	birth DATE NOT NULL,
	death DATE,
	age SMALLINT,
	gender VARCHAR(255) NOT NULL,
	nationality VARCHAR(255) NOT NULL,
	CONSTRAINT PK_MUSICIAN PRIMARY KEY(id_musician),
	CONSTRAINT GENDER CHECK (gender IN ('M','F')));

CREATE TABLE ALBUM (
	id_album SMALLINT,
	title VARCHAR(255) NOT NULL,
	year SMALLINT NOT NULL,
	id_band SMALLINT NOT NULL,
	CONSTRAINT PK_ALBUM PRIMARY KEY(id_album));

CREATE TABLE MEMBER (
	id_musician SMALLINT, 
	id_band SMALLINT, 
	instrument VARCHAR(255),
 	CONSTRAINT FK_MUSICIAN_MEMBER FOREIGN KEY (id_musician) REFERENCES MUSICIAN(id_musician) ON DELETE CASCADE,
	CONSTRAINT CHECK_INSTRUMENT CHECK (instrument IN ('Bass', 'Drums', 'Guitar', 'Keyboard', 'Vocals', 'Trumpet', 'Clarinet', 'Oboe', 'Flute')));

CREATE TABLE SONG(
	id_song SMALLINT,
	title VARCHAR(255) NOT NULL,
	duration TIME NOT NULL,
	id_album SMALLINT ,
	CONSTRAINT PK_SONG PRIMARY KEY(id_song),
	CONSTRAINT FK_ALBUM FOREIGN KEY(id_album) REFERENCES ALBUM(id_album) ON DELETE SET NULL,
	CONSTRAINT CHECK_DURATION CHECK (duration > '0:00'));

CREATE TABLE COMPOSER(
	id_musician SMALLINT,
	id_song SMALLINT,
	CONSTRAINT PK_COMPOSER PRIMARY KEY(id_musician, id_song),
	CONSTRAINT FK_SONG_COMPOSER FOREIGN KEY (id_song) REFERENCES SONG(id_song));

CREATE TABLE BAND ( 
	id_band SMALLINT, 
	name VARCHAR(255), 
	year_formed INT NOT NULL, 
	year_dissolution INT, 
	style VARCHAR(255), 
	origin VARCHAR (100),  
	CONSTRAINT PK_BAND PRIMARY KEY (id_band), 
	CONSTRAINT BAND CHECK (style IN ('Blues','Country','Heavy','Jazz','Pop','Punk','Reggae','Rock','Soul','Thrash','Techno'))) ; 

COMMIT;


